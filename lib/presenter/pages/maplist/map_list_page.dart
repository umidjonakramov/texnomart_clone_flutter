import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:texnomart_clone_flutter/utils/branch_item.dart';import 'package:texnomart_clone_flutter/utils/location_item.dart';import '../map/shops_location_screen.dart';import 'bloc/map_list_bloc.dart';class MapListPage extends StatelessWidget {  const MapListPage({super.key});  @override  Widget build(BuildContext context) {    final bloc = MapListBloc();    return BlocProvider.value(      value: bloc..add(GetAllMapListEvent()),      child: BlocConsumer<MapListBloc, MapListState>(        listener: (context, state) {},        builder: (context, state) {          return Builder(builder: (context) {            if (state is GetAllMapListState) {              return Scaffold(                body: SafeArea(                    child: Stack(children: [                  Container(                    height: 50,                    decoration: const BoxDecoration(color: Color(0xFFF8BF1C)),                    child: Row(                      children: [                        Padding(                          padding: const EdgeInsets.only(left: 18.0),                          child: InkWell(                              onTap: () {                                Navigator.pushNamed(context, "profil");                              },                              child: const Icon(                                Icons.arrow_back,                                size: 30,                              )),                        ),                        const Padding(                          padding: EdgeInsets.only(left: 28.0),                          child: Text(                            "Do'konlar",                            style: TextStyle(                                fontSize: 18, fontWeight: FontWeight.w500),                          ),                        ),                        const Spacer(),                        Padding(                          padding: const EdgeInsets.only(right: 28.0),                          child: InkWell(                              onTap: () {                                Navigator.pushNamed(                                    context, "allbranchesscreen");                              },                              child: const Icon(                                Icons.map,                                color: Colors.black,                              )),                        )                      ],                    ),                  ),                  Padding(                    padding:                        const EdgeInsets.only(left: 12, right: 12, top: 60),                    child: ListView.builder(                      itemCount: state.data.data?.data?.length ?? 0,                      itemBuilder: (context, index) {                        print('length - ${state.data.data?.data?.length}');                        final actualIndex = (index == 0) ? index + 1 : index;                        return locationItem(                          state.data.data?.data?[actualIndex].name ?? '',                          state.data.data?.data?[actualIndex].openedStores?[0]                                  .address ??                              '',                          state.data.data?.data?[actualIndex].openedStores?[0]                                  .workTime ??                              '',                          () {                            Navigator.push(                                context,                                MaterialPageRoute(                                    builder: (context) => ShopsLocationPage(                                          data: state                                              .data                                              .data                                              ?.data?[actualIndex]                                              .openedStores?[0],                                        )));                          },                        );                      },                    ),                  )                ])),              );            } else {              return Scaffold(                  body: Padding(                padding: const EdgeInsets.only(top: 28.0),                child: Column(                  children: [                    LinearProgressIndicator(),                  ],                ),              ));            }          });        },      ),    );  }}