import 'package:bloc/bloc.dart';import 'package:meta/meta.dart';import '../../../../data/source/models/category/all_categories_model.dart';import '../../../../data/source/repository/app_repository.dart';import '../../../../di/di.dart';part 'catalog_event.dart';part 'catalog_state.dart';class CatalogBloc extends Bloc<CatalogEvent, CatalogState> {  final _repository = getIt<AppRepository>();  CatalogBloc() : super(CatalogInitial()) {    on<GetAllCatalogEvent>((event, emit) async {      emit(LoadingState());      final data = await _repository.getAllCategories();      emit(GetAllCatalogState(data));    });    on<ClickItemForChildEvent>((event, emit) {      emit(ClickItemForChildState(event.data, event.name));    });  }}