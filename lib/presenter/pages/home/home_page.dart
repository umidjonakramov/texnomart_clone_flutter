import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:google_fonts/google_fonts.dart';import 'package:texnomart_clone_flutter/presenter/pages/map/mapScreen.dart';import '../../../utils/category.dart';import '../../../utils/category_holder.dart';import '../../../utils/product_holder.dart';import '../../../utils/slider.dart';import '../../../utils/top_product_item.dart';import '../dashboard/dashboard_page.dart';import '../product_detail/product_details_page.dart';import '../products/products_page.dart';import 'bloc/home_bloc.dart';class HomePage extends StatefulWidget {  const HomePage({super.key});  @override  State<HomePage> createState() => _HomePageState();}class _HomePageState extends State<HomePage> {  final _bloc = HomeBloc();  List<CategoryHolder> categoryHolder = [];  List<String> sliderData = [];  List<ProductHolder> topProducts = [];  @override  void initState() {    _bloc.add(GetSlidersEvent());    // _bloc.add(GetAllCategoriesEvent());    _bloc.add(GetTopProductsEvent());    _bloc.add(GetTopCategoriesEvent());    super.initState();  }  @override  void dispose() {    _bloc.close();    super.dispose();  }  @override  Widget build(BuildContext context) {    return BlocProvider.value(      value: _bloc,      child: BlocConsumer<HomeBloc, HomeState>(        listener: (context, state) {          if (state is ClickTopCategoryState) {            Navigator.push(                context,                MaterialPageRoute(                    builder: (context) =>                        ProductsPage(state.title, state.slug)));          }          if (state is GetTopCategoriesState) {            state.data.data?.data?.forEach((element) {              categoryHolder.add(CategoryHolder(element.image ?? '',                  element.title ?? '', element.slug ?? '', []));            });          }          if (state is GetSliderState) {            state.data.data?.data?.forEach((element) {              sliderData.add(element.imageMobileWeb ?? '');            });          }          if (state is GetTopProductsState) {            state.data.data?.data?.forEach((element) {              topProducts.add(ProductHolder(                  element.id,                  element.name,                  element.image,                  element.saleMonths,                  element.stickers,                  element.availability,                  0,                  '',                  [],                  element.salePrice,                  '',                  element.oldPrice,                  '',                  0,                  '',                  element.axiomMonthlyPrice,                  element.reviewsCount,                  element.reviewsAverage,                  element.allCount,                  null,                  false,                  0));            });          }        },        builder: (context, state) {          if (state is LoadingState) {            return const Scaffold(              body: SafeArea(                child: Center(                  child: CupertinoActivityIndicator(),                ),              ),            );          } else {            return Scaffold(              appBar: AppBar(                automaticallyImplyLeading: false,                toolbarHeight: 100,                backgroundColor: const Color(0xFFfbc100),                centerTitle: true,                title: Column(                  children: [                    Text(                      'texnomart*',                      style: TextStyle(                        fontSize: 22,                        fontWeight: FontWeight.w800,                      ),                    ),                    SizedBox(                      height: 10,                    ),                    TextField(                      decoration: InputDecoration(                        border: OutlineInputBorder(                            borderSide: BorderSide(color: Colors.white)),                        enabledBorder: OutlineInputBorder(                          borderSide: BorderSide(                              width: 2,                              style: BorderStyle.solid,                              color: Colors.white),                        ),                        disabledBorder: OutlineInputBorder(                          borderSide: BorderSide(                              width: 2,                              style: BorderStyle.solid,                              color: Colors.white),                        ),                        filled: true,                        fillColor: Colors.white,                        hintText: 'Sotib olish',                        isDense: true,                        // Added this                        contentPadding: EdgeInsets.all(8), // Added this                      ),                    )                  ],                ),              ),              body: SafeArea(                child: (categoryHolder.isEmpty &&                        sliderData.isEmpty &&                        topProducts.isEmpty)                    ? Column(                        children: [                          SizedBox(                            width: double.infinity,                          ),                          LinearProgressIndicator()                        ],                        // child: Lottie.asset('assets/lottie/loading_circle.json',                        //     height: 150, width: 150, fit: BoxFit.fitWidth),                      )                    : CustomScrollView(                        slivers: [                          SliverToBoxAdapter(                            child: Padding(                                padding: const EdgeInsets.only(top: 15),                                child: SizedBox(                                  height: 240,                                  child: ImageSliderDemo(imgList: sliderData),                                )),                          ),                          SliverToBoxAdapter(                            child: Column(                              crossAxisAlignment: CrossAxisAlignment.end,                              children: [                                Padding(                                  padding: const EdgeInsets.symmetric(                                      horizontal: 18),                                  child: InkWell(                                    onTap: (){                                      Navigator.push(                                          context,                                          MaterialPageRoute(                                              builder: (context) =>                                              const MapScreen()));                                    },                                    child: Icon(                                      Icons.location_on_outlined,                                      color: Colors.yellow,                                      size: 30,                                    ),                                  ),                                ),                                Padding(                                  padding: const EdgeInsets.symmetric(                                      horizontal: 24, vertical: 10),                                  child: Row(                                    children: [                                      Text('Kategoriyalar',                                          textAlign: TextAlign.start,                                          style: GoogleFonts.poppins(                                              fontWeight: FontWeight.w500,                                              fontSize: 14)),                                      const Spacer(),                                      InkWell(                                          borderRadius:                                              BorderRadius.circular(5),                                          highlightColor:                                              const Color(0xFFfbc100)                                                  .withAlpha(60),                                          splashColor: const Color(0xFFfbc100)                                              .withAlpha(60),                                          onTap: () {                                            Navigator.push(                                                context,                                                MaterialPageRoute(                                                    builder: (context) =>                                                        const DashboardPage(                                                            currentPage: 1)));                                          },                                          child: Row(                                            children: [                                              Text('barchasi',                                                  textAlign: TextAlign.start,                                                  style: GoogleFonts.poppins(                                                      fontWeight:                                                          FontWeight.w400,                                                      color: Colors.grey,                                                      fontSize: 12)),                                              const SizedBox(width: 5),                                              const Icon(                                                Icons.arrow_forward_ios_rounded,                                                size: 12,                                              )                                            ],                                          )),                                    ],                                  ),                                ),                                SizedBox(                                    height: 120,                                    child: ListView.builder(                                      scrollDirection: Axis.horizontal,                                      itemCount: categoryHolder.length,                                      itemBuilder: (context, index) {                                        return Padding(                                          padding: const EdgeInsets.symmetric(                                              horizontal: 8.0),                                          child: categoryItem(                                              CategoryHolder(                                                  categoryHolder[index].image,                                                  categoryHolder[index].name,                                                  categoryHolder[index].slug,                                                  []), () {                                            _bloc.add(ClickTopCategoryEvent(                                                categoryHolder[index].name,                                                categoryHolder[index].slug));                                          }),                                        );                                      },                                    )),                                const Divider(color: Color(0x15000000)),                                Padding(                                  padding: const EdgeInsets.symmetric(                                      horizontal: 24, vertical: 10),                                  child: Text('Xit tovarlar',                                      textAlign: TextAlign.start,                                      style: GoogleFonts.poppins(                                          fontWeight: FontWeight.w500,                                          fontSize: 14)),                                ),                              ],                            ),                          ),                          SliverGrid(                            gridDelegate:                                const SliverGridDelegateWithFixedCrossAxisCount(                              crossAxisCount: 2,                              mainAxisSpacing: 8.0,                              crossAxisSpacing: 8.0,                            ),                            delegate: SliverChildBuilderDelegate(                              (BuildContext context, int index) {                                return topProductItem(topProducts[index], () {                                  Navigator.push(                                      context,                                      MaterialPageRoute(                                          builder: (context) =>                                              ProductDetailsPage(                                                  item: topProducts[index])));                                });                              },                              childCount: topProducts.length,                            ),                          ),                        ],                      ),              ),            );          }        },      ),    );  }}